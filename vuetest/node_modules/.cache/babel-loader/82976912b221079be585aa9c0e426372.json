{"remainingRequest":"/workspace/Vue/vuetest/node_modules/babel-loader/lib/index.js!/workspace/Vue/vuetest/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace/Vue/vuetest/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/workspace/Vue/vuetest/src/components/Modal.vue?vue&type=script&lang=js","dependencies":[{"path":"/workspace/Vue/vuetest/src/components/Modal.vue","mtime":1625936729711},{"path":"/workspace/Vue/vuetest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspace/Vue/vuetest/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/workspace/Vue/vuetest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspace/Vue/vuetest/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNb2RhbCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vbnRoOiAxIC8vIGlucHV07J2AIO2VreyDgSBzdHJpbmfsnLzroZwg7J247Iud7ZWc64ukLgoKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgLy/rjbDsnbTthLAg6rCQ7Iuc66W8IOychO2VnCDtlITroZzshLjsiqQKICAgIC8vIOqwkOyLnO2VmOqzoOyLtuydgCDrjbDsnbTthLDtmJXsnYQg7ZWo7IiY66GcIOunjOuTpOyWtOykgOuLpC4gCiAgICAvLyBiIDog67OA6rK9IOyghCDrjbDsnbTthLAgLCBhIDrrs4Dqsr0g7ZuEIOuNsOydtO2EsAogICAgLy8gbW9udGgoYSxiKXsKICAgIG1vbnRoOiBmdW5jdGlvbiBtb250aChhKSB7CiAgICAgIC8vIG1vbnRo652864qUIOuNsOydtO2EsOqwgCDrs4DtlaDrlYzrp4jri6Qg7Jes6riwIO2VqOyImOqwgCDsi6TtlonrkJzri6QuCiAgICAgIGlmIChhID4gMTIpIHsKICAgICAgICBhbGVydCgn6rCc7JuU7IiY6rCAIOygle2Zle2VmOyngCDslYrsirXri4jri6QuIDEgfiAxMiDqsJzsm5Qg7IiYIOyViOyXkOyEnCDshKDtg53tlbTso7zshLjsmpQuJyk7CiAgICAgIH0KCiAgICAgIGlmIChpc05hTihhKSkgewogICAgICAgIGFsZXJ0KCfsiKvsnpDrp4wg7J6F66Cl7ZW07KO87IS47JqULicpOwogICAgICAgIHRoaXMubW9udGggPSAxOwogICAgICB9CiAgICB9CiAgfSwKICAvLyDrjbDsnbTthLDrpbwg67Cb7JWE7JmU64uk652864qUIOusuOuyleydtCBwcm9wcwogIHByb3BzOiB7CiAgICByb29tczogQXJyYXksCiAgICByb29taWQ6IE51bWJlciwKICAgIG1vZGFsc3RhdHVzOiBCb29sZWFuLAogICAgY2xvc2U6IEZ1bmN0aW9uCiAgfQp9Ow=="},{"version":3,"sources":["/workspace/Vue/vuetest/src/components/Modal.vue"],"names":[],"mappings":";AAkCA,eAAc;AACV,EAAA,IAAG,EAAI,OADG;AAEV,EAAA,IAFU,kBAEJ;AACJ,WAAM;AACF,MAAA,KAAI,EAAI,CADN,CAEF;;AAFE,KAAN;AAID,GAPS;AAQV,EAAA,KAAK,EAAE;AACL;AACA;AACA;AACA;AACA,IAAA,KALK,iBAKC,CALD,EAKG;AACJ;AACA,UAAI,CAAA,GAAI,EAAR,EAAY;AACR,QAAA,KAAK,CAAC,yCAAD,CAAL;AACJ;;AAEA,UAAI,KAAK,CAAC,CAAD,CAAT,EAAc;AACV,QAAA,KAAK,CAAC,aAAD,CAAL;AACA,aAAK,KAAL,GAAa,CAAb;AACJ;AACH;AAfI,GARG;AAyBV;AACA,EAAA,KAAI,EAAI;AACJ,IAAA,KAAI,EAAI,KADJ;AAEJ,IAAA,MAAK,EAAI,MAFL;AAGJ,IAAA,WAAU,EAAI,OAHV;AAIJ,IAAA,KAAK,EAAE;AAJH;AA1BE,CAAd","sourcesContent":["// 1. Vue파일 import\n// 2. 등록하고 사용 v-if=\"isModalViewed\" @close-modal=\"isModalViewed = false\"\n// props는 read-only임 받아온거 수정하면 큰일남\n// 부모컴포넌트에서 쓰는 데이터면 부모컴포넌트에 만들어주는게 좋다\n\n<template>\n   <!-- 모달창 -->\n    <div class=\"black-bg\" v-if=\"modalstatus == true\" >\n        <div class=\"white-bg\">\n            <h4>Child-Modal</h4>\n            <h4>{{ rooms[roomid].title }}</h4>\n            <img :src=\"rooms[roomid].image\" class=\"room-img\" />\n            <p> {{ rooms[roomid].content }}</p>\n            <!-- input : 입력할때마다 실행시켜주삼 -->\n            <!-- <input @input=\"month = $event.target.value\"> -->\n            <!-- 축약버전이 있음 input 류에  붙일 수 있음 -->\n            <input v-model=\"month\">\n            <br>\n            <br>\n            <input v-model=\"month\" type=\"range\" min=\"1\" max=\"12\">\n            <!-- <input v-model.number=\"month\"> -->\n            <!-- <textarea v-model=\"month\"></textarea> -->\n            <!-- <select v-model=\"month\">\n                 <option v-for=\"i in 12\" :key=\"i\" >{{i}}</option>\n            </select> -->\n            <p> {{ month }} 개월 선택함 :  {{ rooms[roomid].price * month }} 원</p>\n            <!-- <Button @click=\"$emit('close', false)\">닫기</button> -->\n            <Button @click=\"$emit('closeModal')\">닫기</button>\n        </div>\n    </div>\n   <!-- 모달창 -->\n</template>\n\n<script>\nexport default{\n    name : 'Modal',    \n    data(){\n      return{\n          month : 1,\n          // input은 항상 string으로 인식한다.\n      }  \n    },\n    watch: {\n      //데이터 감시를 위한 프로세스\n      // 감시하고싶은 데이터형을 함수로 만들어준다. \n      // b : 변경 전 데이터 , a :변경 후 데이터\n      // month(a,b){\n      month(a){\n          // month라는 데이터가 변할때마다 여기 함수가 실행된다.\n          if( a > 12 ){   \n              alert('개월수가 정확하지 않습니다. 1 ~ 12 개월 수 안에서 선택해주세요.')    \n          }\n          \n          if( isNaN(a) ){\n              alert('숫자만 입력해주세요.')\n              this.month = 1\n          }\n      },\n    },\n    // 데이터를 받아왔다라는 문법이 props\n    props : {\n        rooms : Array,\n        roomid : Number,\n        modalstatus : Boolean,\n        close: Function\n    },\n}\n</script>\n\n<style>\n\n</style>\n        "],"sourceRoot":""}]}